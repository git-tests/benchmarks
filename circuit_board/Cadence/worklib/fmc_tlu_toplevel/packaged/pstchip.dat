FILE_TYPE = LIBRARY_PARTS;
{ Packager-XL run on 04-Mar-2011 AT 13:54:49 }
primitive 'AD5316_TSSOP-AD';
  pin
    'VDD':
      PIN_NUMBER='(2)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VOUTA':
      PIN_NUMBER='(3)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'VOUTB':
      PIN_NUMBER='(4)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'VOUTC':
      PIN_NUMBER='(5)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'VREFA':
      PIN_NUMBER='(6)';
      INPUT_LOAD='(-0.01,0.01)';
    'VREFB':
      PIN_NUMBER='(7)';
      INPUT_LOAD='(-0.01,0.01)';
    'VREFC':
      PIN_NUMBER='(8)';
      INPUT_LOAD='(-0.01,0.01)';
    'VREFD':
      PIN_NUMBER='(9)';
      INPUT_LOAD='(-0.01,0.01)';
    'PD*':
      PIN_NUMBER='(10)';
      INPUT_LOAD='(-0.01,0.01)';
    'VOUTD':
      PIN_NUMBER='(11)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'GND':
      PIN_NUMBER='(12)';
      PINUSE='GROUND';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'SDA':
      PIN_NUMBER='(13)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'SCL':
      PIN_NUMBER='(14)';
      INPUT_LOAD='(-0.01,0.01)';
    'A0':
      PIN_NUMBER='(15)';
      INPUT_LOAD='(-0.01,0.01)';
    'A1':
      PIN_NUMBER='(16)';
      INPUT_LOAD='(-0.01,0.01)';
    'LDAC*':
      PIN_NUMBER='(1)';
      INPUT_LOAD='(-0.01,0.01)';
      NO_LOAD_CHECK='High';
      NO_IO_CHECK='High';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
  end_pin;
  body
      PART_NAME='AD5316';
      BODY_NAME='AD5316';
      JEDEC_TYPE='TSSOP16';
      PHYS_DES_PREFIX='U';
      CLASS='IC';
      CI='!';
      PART_NUMBER='AD5316BRUZ';
      PART_DESCRIPTION='4 buffered, 10-bit DACs';
      OL_COMMENTS='Available Farnell 1079338';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      PARENT_PART_TYPE='AD5316_TSSOP';
      PARENT_PPT='AD5316';
      PARENT_PPT_PART='AD5316_TSSOP-AD';
  end_body;
end_primitive;
primitive 'ADR421_SOIC';
  pin
    'TRIM':
      PIN_NUMBER='(5)';
      PIN_TYPE='ANALOG';
      NO_LOAD_CHECK='BOTH';
      NO_IO_CHECK='BOTH';
      ALLOW_CONNECT='TRUE';
    'VIN':
      PIN_NUMBER='(2)';
      PINUSE='POWER';
    'GND':
      PIN_NUMBER='(4)';
      PINUSE='GROUND';
    'VOUT':
      PIN_NUMBER='(6)';
      PINUSE='POWER';
  end_pin;
  body
      NC_PINS='(1,3,7,8)';
      CLASS='IC';
      PART_NAME='ADR421';
      PHYS_DES_PREFIX='IC';
      JEDEC_TYPE='SOIC8S_127';
      BODY_NAME='ADR421';
      MANUFACTURER='ANALOG DEVICES';
      PART_NUMBER='ADR421AR';
      DESCRIPTION='Ultraprecision Low Noise 2.5V Output XFET Voltage Reference';
  end_body;
end_primitive;
primitive 'ASP-134606-01';
  pin
    'C'<1>:
      PIN_NUMBER='(C1,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<2>:
      PIN_NUMBER='(C2,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<3>:
      PIN_NUMBER='(C3,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<4>:
      PIN_NUMBER='(C4,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<5>:
      PIN_NUMBER='(C5,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<6>:
      PIN_NUMBER='(C6,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<7>:
      PIN_NUMBER='(C7,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<8>:
      PIN_NUMBER='(C8,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<9>:
      PIN_NUMBER='(C9,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<10>:
      PIN_NUMBER='(C10,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<11>:
      PIN_NUMBER='(C11,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<12>:
      PIN_NUMBER='(C12,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<13>:
      PIN_NUMBER='(C13,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<14>:
      PIN_NUMBER='(C14,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<15>:
      PIN_NUMBER='(C15,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<16>:
      PIN_NUMBER='(C16,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<17>:
      PIN_NUMBER='(C17,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<18>:
      PIN_NUMBER='(C18,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<19>:
      PIN_NUMBER='(C19,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<20>:
      PIN_NUMBER='(C20,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<21>:
      PIN_NUMBER='(C21,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<22>:
      PIN_NUMBER='(C22,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<23>:
      PIN_NUMBER='(C23,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<24>:
      PIN_NUMBER='(C24,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<25>:
      PIN_NUMBER='(C25,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<26>:
      PIN_NUMBER='(C26,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<27>:
      PIN_NUMBER='(C27,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<28>:
      PIN_NUMBER='(C28,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<29>:
      PIN_NUMBER='(C29,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<30>:
      PIN_NUMBER='(C30,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<31>:
      PIN_NUMBER='(C31,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<32>:
      PIN_NUMBER='(C32,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<33>:
      PIN_NUMBER='(C33,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<34>:
      PIN_NUMBER='(C34,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<35>:
      PIN_NUMBER='(C35,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<36>:
      PIN_NUMBER='(C36,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<37>:
      PIN_NUMBER='(C37,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<38>:
      PIN_NUMBER='(C38,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<39>:
      PIN_NUMBER='(C39,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'C'<40>:
      PIN_NUMBER='(C40,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<1>:
      PIN_NUMBER='(D1,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<2>:
      PIN_NUMBER='(D2,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<3>:
      PIN_NUMBER='(D3,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<4>:
      PIN_NUMBER='(D4,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<5>:
      PIN_NUMBER='(D5,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<6>:
      PIN_NUMBER='(D6,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<7>:
      PIN_NUMBER='(D7,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<8>:
      PIN_NUMBER='(D8,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<9>:
      PIN_NUMBER='(D9,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<10>:
      PIN_NUMBER='(D10,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<11>:
      PIN_NUMBER='(D11,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<12>:
      PIN_NUMBER='(D12,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<13>:
      PIN_NUMBER='(D13,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<14>:
      PIN_NUMBER='(D14,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<15>:
      PIN_NUMBER='(D15,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<16>:
      PIN_NUMBER='(D16,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<17>:
      PIN_NUMBER='(D17,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<18>:
      PIN_NUMBER='(D18,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<19>:
      PIN_NUMBER='(D19,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<20>:
      PIN_NUMBER='(D20,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<21>:
      PIN_NUMBER='(D21,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<22>:
      PIN_NUMBER='(D22,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<23>:
      PIN_NUMBER='(D23,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<24>:
      PIN_NUMBER='(D24,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<25>:
      PIN_NUMBER='(D25,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<26>:
      PIN_NUMBER='(D26,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<27>:
      PIN_NUMBER='(D27,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<28>:
      PIN_NUMBER='(D28,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<29>:
      PIN_NUMBER='(D29,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<30>:
      PIN_NUMBER='(D30,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<31>:
      PIN_NUMBER='(D31,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<32>:
      PIN_NUMBER='(D32,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<33>:
      PIN_NUMBER='(D33,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<34>:
      PIN_NUMBER='(D34,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<35>:
      PIN_NUMBER='(D35,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<36>:
      PIN_NUMBER='(D36,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<37>:
      PIN_NUMBER='(D37,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<38>:
      PIN_NUMBER='(D38,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<39>:
      PIN_NUMBER='(D39,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'D'<40>:
      PIN_NUMBER='(D40,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<1>:
      PIN_NUMBER='(0,G1)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<2>:
      PIN_NUMBER='(0,G2)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<3>:
      PIN_NUMBER='(0,G3)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<4>:
      PIN_NUMBER='(0,G4)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<5>:
      PIN_NUMBER='(0,G5)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<6>:
      PIN_NUMBER='(0,G6)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<7>:
      PIN_NUMBER='(0,G7)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<8>:
      PIN_NUMBER='(0,G8)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<9>:
      PIN_NUMBER='(0,G9)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<10>:
      PIN_NUMBER='(0,G10)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<11>:
      PIN_NUMBER='(0,G11)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<12>:
      PIN_NUMBER='(0,G12)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<13>:
      PIN_NUMBER='(0,G13)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<14>:
      PIN_NUMBER='(0,G14)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<15>:
      PIN_NUMBER='(0,G15)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<16>:
      PIN_NUMBER='(0,G16)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<17>:
      PIN_NUMBER='(0,G17)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<18>:
      PIN_NUMBER='(0,G18)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<19>:
      PIN_NUMBER='(0,G19)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<20>:
      PIN_NUMBER='(0,G20)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<21>:
      PIN_NUMBER='(0,G21)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<22>:
      PIN_NUMBER='(0,G22)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<23>:
      PIN_NUMBER='(0,G23)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<24>:
      PIN_NUMBER='(0,G24)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<25>:
      PIN_NUMBER='(0,G25)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<26>:
      PIN_NUMBER='(0,G26)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<27>:
      PIN_NUMBER='(0,G27)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<28>:
      PIN_NUMBER='(0,G28)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<29>:
      PIN_NUMBER='(0,G29)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<30>:
      PIN_NUMBER='(0,G30)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<31>:
      PIN_NUMBER='(0,G31)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<32>:
      PIN_NUMBER='(0,G32)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<33>:
      PIN_NUMBER='(0,G33)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<34>:
      PIN_NUMBER='(0,G34)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<35>:
      PIN_NUMBER='(0,G35)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<36>:
      PIN_NUMBER='(0,G36)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<37>:
      PIN_NUMBER='(0,G37)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<38>:
      PIN_NUMBER='(0,G38)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<39>:
      PIN_NUMBER='(0,G39)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'G'<40>:
      PIN_NUMBER='(0,G40)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<1>:
      PIN_NUMBER='(0,H1)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<2>:
      PIN_NUMBER='(0,H2)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<3>:
      PIN_NUMBER='(0,H3)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<4>:
      PIN_NUMBER='(0,H4)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<5>:
      PIN_NUMBER='(0,H5)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<6>:
      PIN_NUMBER='(0,H6)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<7>:
      PIN_NUMBER='(0,H7)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<8>:
      PIN_NUMBER='(0,H8)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<9>:
      PIN_NUMBER='(0,H9)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<10>:
      PIN_NUMBER='(0,H10)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<11>:
      PIN_NUMBER='(0,H11)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<12>:
      PIN_NUMBER='(0,H12)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<13>:
      PIN_NUMBER='(0,H13)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<14>:
      PIN_NUMBER='(0,H14)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<15>:
      PIN_NUMBER='(0,H15)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<16>:
      PIN_NUMBER='(0,H16)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<17>:
      PIN_NUMBER='(0,H17)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<18>:
      PIN_NUMBER='(0,H18)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<19>:
      PIN_NUMBER='(0,H19)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<20>:
      PIN_NUMBER='(0,H20)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<21>:
      PIN_NUMBER='(0,H21)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<22>:
      PIN_NUMBER='(0,H22)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<23>:
      PIN_NUMBER='(0,H23)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<24>:
      PIN_NUMBER='(0,H24)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<25>:
      PIN_NUMBER='(0,H25)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<26>:
      PIN_NUMBER='(0,H26)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<27>:
      PIN_NUMBER='(0,H27)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<28>:
      PIN_NUMBER='(0,H28)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<29>:
      PIN_NUMBER='(0,H29)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<30>:
      PIN_NUMBER='(0,H30)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<31>:
      PIN_NUMBER='(0,H31)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<32>:
      PIN_NUMBER='(0,H32)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<33>:
      PIN_NUMBER='(0,H33)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<34>:
      PIN_NUMBER='(0,H34)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<35>:
      PIN_NUMBER='(0,H35)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<36>:
      PIN_NUMBER='(0,H36)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<37>:
      PIN_NUMBER='(0,H37)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<38>:
      PIN_NUMBER='(0,H38)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<39>:
      PIN_NUMBER='(0,H39)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'H'<40>:
      PIN_NUMBER='(0,H40)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
  end_pin;
  body
      PART_NAME='CON160P_40CDGH';
      BODY_NAME='CON160P_40CDGH';
      PHYS_DES_PREFIX='J';
      CLASS='IO';
      STATUS='Preferred';
      PART_NUMBER='ASP-134606-01';
      MANUFACTURER='SAMTEC';
      DESCRIPTION='1.27mm pitch Terminal Array Assembly Similar to VITA57';
      DATASHEET='file://cern.ch/dfs/Services/cdslib/Datasheets/ASP-134606-01.pdf~
';
      PINCOUNT='160';
      SMD='YES';
      CASE='';
      JEDEC_TYPE='SAMTEC_ASP-134606-01';
      PARENT_PART_TYPE='CON160P_40CDGH';
      PARENT_PPT='CON160P_40CDGH';
      PARENT_PPT_PART='ASP-134606-01';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-1.0UF,6.3V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD Ceramic Capacitor Class2';
      SMD='YES';
      VALUE='1.0uF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_1UF_6V3_10%_X5R';
      MANUFACTURER='GENERIC';
      STATUS='Preferred';
      CASE='0603';
      TOL='10%';
      VOLT='6.3V';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-1.0UF,6.3V';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-100NF,16V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD Ceramic Capacitor Class2';
      SMD='YES';
      VALUE='100nF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_100NF_16V_10%';
      MANUFACTURER='GENERIC';
      CASE='0603';
      VOLT='16V';
      TOL='10%';
      STATUS='Preferred';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-100NF,16V';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-10NF,50V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD Ceramic Capacitor Class2';
      SMD='YES';
      VALUE='10nF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_10NF_50V_10%';
      MANUFACTURER='GENERIC';
      CASE='0603';
      VOLT='50V';
      TOL='10%';
      STATUS='Preferred';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-10NF,50V';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-1UF,16V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD X5R Ceramic Capacitor';
      SMD='YES';
      VALUE='1uF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_1UF_16V_10%_X5R';
      MANUFACTURER='GENERIC';
      CASE='0603';
      VOLT='16V';
      TOL='10%';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-1UF,16V';
  end_body;
end_primitive;
primitive 'MAX9601_TSSOP';
  pin
    'VCC'<0>:
      PIN_NUMBER='(7,7)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VCC'<1>:
      PIN_NUMBER='(14,14)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VEE'<0>:
      PIN_NUMBER='(6,6)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VEE'<1>:
      PIN_NUMBER='(15,15)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'IN+'<0>:
      PIN_NUMBER='(10,11)';
      INPUT_LOAD='(-0.01,0.01)';
    'IN-'<0>:
      PIN_NUMBER='(9,12)';
      INPUT_LOAD='(-0.01,0.01)';
    'LE'<0>:
      PIN_NUMBER='(4,17)';
      INPUT_LOAD='(-0.01,0.01)';
    'Q'<0>:
      PIN_NUMBER='(1,20)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'LE*'<0>:
      PIN_NUMBER='(5,16)';
      INPUT_LOAD='(-0.01,0.01)';
    'HYS'<0>:
      PIN_NUMBER='(8,13)';
      INPUT_LOAD='(-0.01,0.01)';
    'VCCO_'<0>:
      PIN_NUMBER='(3,3)';
      PINUSE='GROUND';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VCCO_'<1>:
      PIN_NUMBER='(18,18)';
      PINUSE='GROUND';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'Q*'<0>:
      PIN_NUMBER='(2,19)';
      OUTPUT_LOAD='(1.0,-1.0)';
  end_pin;
  body
      PART_NAME='MAX9601';
      PART_NUMBER='MAX9601EUP';
      MANUFACTURER='Maxim';
      DESCRIPTION='Dual PECL, 500ps Ultra-High-Speed Comparators';
      BODY_NAME='MAX9601';
      JEDEC_TYPE='TSSOP20MA_065';
      PHYS_DES_PREFIX='IC';
      CLASS='IC';
  end_body;
end_primitive;
primitive 'OPA4277UA';
  pin
    'V-':
      PIN_NUMBER='(11,11,11,11)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'V+':
      PIN_NUMBER='(4,4,4,4)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'OUT'<0>:
      PIN_NUMBER='(1,7,8,14)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'PIN'<0>:
      PIN_NUMBER='(3,5,10,12)';
      INPUT_LOAD='(-0.01,0.01)';
    'MIN'<0>:
      PIN_NUMBER='(2,6,9,13)';
      INPUT_LOAD='(-0.01,0.01)';
  end_pin;
  body
      PART_NAME='OPA4277';
      BODY_NAME='OPA4277';
      PHYS_DES_PREFIX='IC';
      CLASS='IC';
      PART_NUMBER='OPA4277UA';
      MANUFACTURER='TEXAS INSTRUMENTS';
      DESCRIPTION='High Precision Operational Amplifier';
      DATASHEET='file://cern.ch/dfs/Services/cdslib/Datasheets/opa277.pdf';
      PINCOUNT='14';
      SMD='YES';
      CASE='SOIC14';
      JEDEC_TYPE='SOIC127P600X175-14N';
      PARENT_PART_TYPE='OPA4277_SOIC';
      PARENT_PPT='OPA4277';
      PARENT_PPT_PART='OPA4277UA';
  end_body;
end_primitive;
primitive 'PCOAX-PLEMO00C';
  pin
    'A':
      PIN_NUMBER='(1)';
  end_pin;
  body
      PART_NAME='PCOAX';
      POWER_PINS='(GND:2,3,4,5)';
      ALLOW_CONNECT='TRUE';
      NO_IO_CHECK='TRUE';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      PHYS_DES_PREFIX='PX';
      CLASS='IO';
      JEDEC_TYPE='PLEMO80';
      PINCOUNT='5';
      PART_NUMBER='EPL.00.250.NTN';
      DESCRIPTION='50ohm LEMO 00 Right Angle Socket for PCB';
      MANUFACTURER='LEMO';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=09.46.~
11.180.6';
      PARENT_PART_TYPE='PCOAX';
      PARENT_PPT='PCOAX';
      PARENT_PPT_PART='PCOAX-PLEMO00C';
  end_body;
end_primitive;
primitive 'PLEMO2CI-PLEMO2-00B';
  pin
    'A':
      PIN_NUMBER='(1)';
      UNKNOWN_LOADING='TRUE';
    'B':
      PIN_NUMBER='(2)';
      UNKNOWN_LOADING='TRUE';
  end_pin;
  body
      PART_NAME='PLEMO2CI';
      BODY_NAME='PLEMO2CI';
      POWER_PINS='(GND:3,4,5,6)';
      PHYS_DES_PREFIX='PX';
      CLASS='IO';
      JEDEC_TYPE='LEMOEPG00_302';
      PINCOUNT='6';
      PART_NUMBER='09.31.28.007.2';
      DESCRIPTION='LEMO COUDEE CI 2C SIZE 00B';
      MANUFACTURER='LEMO';
      PARENT_PART_TYPE='PLEMO2CI';
      PARENT_PPT='PLEMO2CI';
      PARENT_PPT_PART='PLEMO2CI-PLEMO2-00B';
  end_body;
end_primitive;
primitive 'RSMD0402_1/16W-100,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0402';
      BODY_NAME='RSMD0402';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0402';
      SMD='YES';
      STATUS='Not Preferred';
      PART_NUMBER='R0402_100R_1%_0.063W_100PPM';
      VALUE='100';
      TOL='1%';
      PWR='0.063W';
      JEDEC_TYPE='C0402';
      MANUFACTURER='GENERIC';
      PARENT_PART_TYPE='RSMD0402_1/16W';
      PARENT_PPT='RSMD0402';
      PARENT_PPT_PART='RSMD0402_1/16W-100,1%';
  end_body;
end_primitive;
primitive 'RSMD0402_1/16W-220,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0402';
      BODY_NAME='RSMD0402';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0402';
      SMD='YES';
      STATUS='Not Preferred';
      PART_NUMBER='R0402_220R_1%_0.063W_100PPM';
      VALUE='220';
      TOL='1%';
      PWR='0.063W';
      JEDEC_TYPE='C0402';
      MANUFACTURER='GENERIC';
      PARENT_PART_TYPE='RSMD0402_1/16W';
      PARENT_PPT='RSMD0402';
      PARENT_PPT_PART='RSMD0402_1/16W-220,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-100,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_100R_1%_0.1W_100PPM';
      VALUE='100';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.200.9';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-100,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-10K,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_10K_1%_0.1W_100PPM';
      VALUE='10k';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.400.3';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-10K,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-24,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_24R_1%_0.1W_100PPM';
      VALUE='24';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.124.4';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-24,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-33K,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_33K_1%_0.1W_100PPM';
      VALUE='33k';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.433.4';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-33K,1%';
  end_body;
end_primitive;
primitive 'SN65LVDS20_SON-TEXAS INSTRUMENA';
  pin
    'GND':
      PIN_NUMBER='(9)';
      PINUSE='GROUND';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'A':
      PIN_NUMBER='(2)';
      INPUT_LOAD='(-0.01,0.01)';
    'B':
      PIN_NUMBER='(3)';
      INPUT_LOAD='(-0.01,0.01)';
    'EN*':
      PIN_NUMBER='(5)';
      INPUT_LOAD='(-0.01,0.01)';
    'VCC':
      PIN_NUMBER='(8)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VBB':
      PIN_NUMBER='(4)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'Y':
      PIN_NUMBER='(7)';
      OUTPUT_LOAD='(1.0,-1.0)';
    'Z':
      PIN_NUMBER='(6)';
      OUTPUT_LOAD='(1.0,-1.0)';
  end_pin;
  body
      PART_NAME='SN65LVDS20';
      BODY_NAME='SN65LVDS20';
      PART_NUMBER='SN65LVDS20DRFT';
      MANUFACTURER='Texas Instruments';
      DESCRIPTION='LVDS Repeater/Translator With Enable';
      JEDEC_TYPE='QFN9_050';
      PHYS_DES_PREFIX='IC';
      CLASS='IC';
      NC_PINS='(1)';
      CI='';
      PART_DESCRIPTION='SMD LVDS repeater with enable';
      OL_COMMENTS='Farnell 1755061';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      PARENT_PART_TYPE='SN65LVDS20_SON';
      PARENT_PPT='SN65LVDS20';
      PARENT_PPT_PART='SN65LVDS20_SON-TEXAS INSTRUMENTS';
  end_body;
end_primitive;
END.

FILE_TYPE = LIBRARY_PARTS;
{ Packager-XL run on 16-Mar-2012 AT 07:43:19 }
primitive '1-HOLE_FXG2-7-BASE';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      INPUT_LOAD='(-0.01,0.01)';
      PINUSE='IN';
  end_pin;
  body
      PART_NAME='1-HOLE';
      BODY_NAME='1-HOLE';
      JEDEC_TYPE='FXG_M2-7';
      PHYS_DES_PREFIX='LK';
      CLASS='IO';
      CI='03574A-1';
      NO_LIST='TRUE';
      PART_DESCRIPTION='2.7mm Fixing Hole';
      PARENT_PART_TYPE='1-HOLE_FXG2-7';
      PARENT_PPT='1-HOLE';
      PARENT_PPT_PART='1-HOLE_FXG2-7-BASE';
  end_body;
end_primitive;
primitive '74LVC07_SOIC-TI-GND=GND_SIGNALA';
  pin
    'A'<0>:
      PIN_NUMBER='(13,11,9,5,3,1)';
      INPUT_LOAD='(-0.6,0.02)';
      PINUSE='IN';
    'Y':
      PIN_NUMBER='(12,10,8,6,4,2)';
      OUTPUT_LOAD='(20.0,-1.0)';
      PINUSE='OUT';
  end_pin;
  body
      PART_NAME='74LVC07';
      BODY_NAME='74LVC07';
      JEDEC_TYPE='SOIC14';
      PHYS_DES_PREFIX='U';
      CLASS='IC';
      CI='';
      PART_NUMBER='SN74LVC07ADE4';
      PART_DESCRIPTION='Hex non-inverting buffer, open drain outputs';
      OL_COMMENTS='Farnell 1236300';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      POWER_PINS='(SUPPLY_1:14;GND_SIGNAL:7)';
      PARENT_PART_TYPE='74LVC07_SOIC';
      SCH_MODIFIED_PART='TRUE';
      PARENT_PPT='74LVC07';
      PARENT_PPT_PART='74LVC07_SOIC-TI';
  end_body;
end_primitive;
primitive 'ADCMP604BKSZ';
  pin
    'Q*':
      PIN_NUMBER='(6)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='OUT';
    'Q':
      PIN_NUMBER='(1)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='OUT';
    '+IN':
      PIN_NUMBER='(3)';
      INPUT_LOAD='(-0.01,0.01)';
      PINUSE='IN';
    '-IN':
      PIN_NUMBER='(4)';
      INPUT_LOAD='(-0.01,0.01)';
      PINUSE='IN';
    'VCC':
      PIN_NUMBER='(5)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
    'VEE':
      PIN_NUMBER='(2)';
      PINUSE='POWER';
      NO_LOAD_CHECK='Both';
      NO_IO_CHECK='Both';
      NO_ASSERT_CHECK='TRUE';
      NO_DIR_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
  end_pin;
  body
      PART_NAME='ADCMP604';
      BODY_NAME='ADCMP604';
      PHYS_DES_PREFIX='IC';
      CLASS='IC';
      STATUS='preferred';
      PART_NUMBER='ADCMP604BKSZ';
      MANUFACTURER='ANALOG DEVICES';
      DESCRIPTION='Rail-to-Rail , Very Fast, 2.5V to 5.5V, Single-Supply LVDS Co~
mparators';
      DATASHEET='file://cern.ch/dfs/Services.cdslib/Dtasheets/ADCMP604_605.pdf';
      PINCOUNT='6';
      SMD='YES';
      CASE='SC70';
      JEDEC_TYPE='SOP65P210X110-6N';
      PARENT_PART_TYPE='ADCMP604_SC70';
      PARENT_PPT='ADCMP604';
      PARENT_PPT_PART='ADCMP604BKSZ';
  end_body;
end_primitive;
primitive 'ASP-134606-01';
  pin
    'C'<1>:
      PIN_NUMBER='(C1,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<2>:
      PIN_NUMBER='(C2,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<3>:
      PIN_NUMBER='(C3,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<4>:
      PIN_NUMBER='(C4,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<5>:
      PIN_NUMBER='(C5,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<6>:
      PIN_NUMBER='(C6,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<7>:
      PIN_NUMBER='(C7,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<8>:
      PIN_NUMBER='(C8,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<9>:
      PIN_NUMBER='(C9,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<10>:
      PIN_NUMBER='(C10,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<11>:
      PIN_NUMBER='(C11,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<12>:
      PIN_NUMBER='(C12,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<13>:
      PIN_NUMBER='(C13,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<14>:
      PIN_NUMBER='(C14,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<15>:
      PIN_NUMBER='(C15,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<16>:
      PIN_NUMBER='(C16,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<17>:
      PIN_NUMBER='(C17,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<18>:
      PIN_NUMBER='(C18,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<19>:
      PIN_NUMBER='(C19,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<20>:
      PIN_NUMBER='(C20,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<21>:
      PIN_NUMBER='(C21,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<22>:
      PIN_NUMBER='(C22,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<23>:
      PIN_NUMBER='(C23,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<24>:
      PIN_NUMBER='(C24,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<25>:
      PIN_NUMBER='(C25,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<26>:
      PIN_NUMBER='(C26,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<27>:
      PIN_NUMBER='(C27,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<28>:
      PIN_NUMBER='(C28,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<29>:
      PIN_NUMBER='(C29,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<30>:
      PIN_NUMBER='(C30,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<31>:
      PIN_NUMBER='(C31,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<32>:
      PIN_NUMBER='(C32,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<33>:
      PIN_NUMBER='(C33,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<34>:
      PIN_NUMBER='(C34,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<35>:
      PIN_NUMBER='(C35,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<36>:
      PIN_NUMBER='(C36,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<37>:
      PIN_NUMBER='(C37,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<38>:
      PIN_NUMBER='(C38,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<39>:
      PIN_NUMBER='(C39,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'C'<40>:
      PIN_NUMBER='(C40,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<1>:
      PIN_NUMBER='(D1,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<2>:
      PIN_NUMBER='(D2,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<3>:
      PIN_NUMBER='(D3,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<4>:
      PIN_NUMBER='(D4,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<5>:
      PIN_NUMBER='(D5,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<6>:
      PIN_NUMBER='(D6,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<7>:
      PIN_NUMBER='(D7,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<8>:
      PIN_NUMBER='(D8,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<9>:
      PIN_NUMBER='(D9,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<10>:
      PIN_NUMBER='(D10,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<11>:
      PIN_NUMBER='(D11,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<12>:
      PIN_NUMBER='(D12,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<13>:
      PIN_NUMBER='(D13,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<14>:
      PIN_NUMBER='(D14,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<15>:
      PIN_NUMBER='(D15,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<16>:
      PIN_NUMBER='(D16,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<17>:
      PIN_NUMBER='(D17,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<18>:
      PIN_NUMBER='(D18,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<19>:
      PIN_NUMBER='(D19,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<20>:
      PIN_NUMBER='(D20,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<21>:
      PIN_NUMBER='(D21,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<22>:
      PIN_NUMBER='(D22,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<23>:
      PIN_NUMBER='(D23,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<24>:
      PIN_NUMBER='(D24,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<25>:
      PIN_NUMBER='(D25,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<26>:
      PIN_NUMBER='(D26,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<27>:
      PIN_NUMBER='(D27,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<28>:
      PIN_NUMBER='(D28,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<29>:
      PIN_NUMBER='(D29,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<30>:
      PIN_NUMBER='(D30,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<31>:
      PIN_NUMBER='(D31,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<32>:
      PIN_NUMBER='(D32,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<33>:
      PIN_NUMBER='(D33,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<34>:
      PIN_NUMBER='(D34,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<35>:
      PIN_NUMBER='(D35,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<36>:
      PIN_NUMBER='(D36,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<37>:
      PIN_NUMBER='(D37,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<38>:
      PIN_NUMBER='(D38,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<39>:
      PIN_NUMBER='(D39,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'D'<40>:
      PIN_NUMBER='(D40,0)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<1>:
      PIN_NUMBER='(0,G1)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<2>:
      PIN_NUMBER='(0,G2)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<3>:
      PIN_NUMBER='(0,G3)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<4>:
      PIN_NUMBER='(0,G4)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<5>:
      PIN_NUMBER='(0,G5)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<6>:
      PIN_NUMBER='(0,G6)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<7>:
      PIN_NUMBER='(0,G7)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<8>:
      PIN_NUMBER='(0,G8)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<9>:
      PIN_NUMBER='(0,G9)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<10>:
      PIN_NUMBER='(0,G10)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<11>:
      PIN_NUMBER='(0,G11)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<12>:
      PIN_NUMBER='(0,G12)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<13>:
      PIN_NUMBER='(0,G13)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<14>:
      PIN_NUMBER='(0,G14)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<15>:
      PIN_NUMBER='(0,G15)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<16>:
      PIN_NUMBER='(0,G16)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<17>:
      PIN_NUMBER='(0,G17)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<18>:
      PIN_NUMBER='(0,G18)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<19>:
      PIN_NUMBER='(0,G19)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<20>:
      PIN_NUMBER='(0,G20)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<21>:
      PIN_NUMBER='(0,G21)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<22>:
      PIN_NUMBER='(0,G22)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<23>:
      PIN_NUMBER='(0,G23)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<24>:
      PIN_NUMBER='(0,G24)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<25>:
      PIN_NUMBER='(0,G25)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<26>:
      PIN_NUMBER='(0,G26)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<27>:
      PIN_NUMBER='(0,G27)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<28>:
      PIN_NUMBER='(0,G28)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<29>:
      PIN_NUMBER='(0,G29)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<30>:
      PIN_NUMBER='(0,G30)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<31>:
      PIN_NUMBER='(0,G31)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<32>:
      PIN_NUMBER='(0,G32)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<33>:
      PIN_NUMBER='(0,G33)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<34>:
      PIN_NUMBER='(0,G34)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<35>:
      PIN_NUMBER='(0,G35)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<36>:
      PIN_NUMBER='(0,G36)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<37>:
      PIN_NUMBER='(0,G37)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<38>:
      PIN_NUMBER='(0,G38)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<39>:
      PIN_NUMBER='(0,G39)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'G'<40>:
      PIN_NUMBER='(0,G40)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<1>:
      PIN_NUMBER='(0,H1)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<2>:
      PIN_NUMBER='(0,H2)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<3>:
      PIN_NUMBER='(0,H3)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<4>:
      PIN_NUMBER='(0,H4)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<5>:
      PIN_NUMBER='(0,H5)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<6>:
      PIN_NUMBER='(0,H6)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<7>:
      PIN_NUMBER='(0,H7)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<8>:
      PIN_NUMBER='(0,H8)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<9>:
      PIN_NUMBER='(0,H9)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<10>:
      PIN_NUMBER='(0,H10)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<11>:
      PIN_NUMBER='(0,H11)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<12>:
      PIN_NUMBER='(0,H12)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<13>:
      PIN_NUMBER='(0,H13)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<14>:
      PIN_NUMBER='(0,H14)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<15>:
      PIN_NUMBER='(0,H15)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<16>:
      PIN_NUMBER='(0,H16)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<17>:
      PIN_NUMBER='(0,H17)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<18>:
      PIN_NUMBER='(0,H18)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<19>:
      PIN_NUMBER='(0,H19)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<20>:
      PIN_NUMBER='(0,H20)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<21>:
      PIN_NUMBER='(0,H21)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<22>:
      PIN_NUMBER='(0,H22)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<23>:
      PIN_NUMBER='(0,H23)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<24>:
      PIN_NUMBER='(0,H24)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<25>:
      PIN_NUMBER='(0,H25)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<26>:
      PIN_NUMBER='(0,H26)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<27>:
      PIN_NUMBER='(0,H27)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<28>:
      PIN_NUMBER='(0,H28)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<29>:
      PIN_NUMBER='(0,H29)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<30>:
      PIN_NUMBER='(0,H30)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<31>:
      PIN_NUMBER='(0,H31)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<32>:
      PIN_NUMBER='(0,H32)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<33>:
      PIN_NUMBER='(0,H33)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<34>:
      PIN_NUMBER='(0,H34)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<35>:
      PIN_NUMBER='(0,H35)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<36>:
      PIN_NUMBER='(0,H36)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<37>:
      PIN_NUMBER='(0,H37)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<38>:
      PIN_NUMBER='(0,H38)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<39>:
      PIN_NUMBER='(0,H39)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
    'H'<40>:
      PIN_NUMBER='(0,H40)';
      BIDIRECTIONAL='TRUE';
      INPUT_LOAD='(-0.01,0.01)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='CON160P_40CDGH';
      BODY_NAME='CON160P_40CDGH';
      PHYS_DES_PREFIX='J';
      CLASS='IO';
      STATUS='Preferred';
      PART_NUMBER='ASP-134606-01';
      MANUFACTURER='SAMTEC';
      DESCRIPTION='1.27mm pitch Terminal Array Assembly Similar to VITA57';
      DATASHEET='file://cern.ch/dfs/Services/cdslib/Datasheets/ASP-134606-01.pdf~
';
      PINCOUNT='160';
      SMD='YES';
      CASE='';
      JEDEC_TYPE='SAMTEC_ASP-134606-01';
      PARENT_PART_TYPE='CON160P_40CDGH';
      PARENT_PPT='CON160P_40CDGH';
      PARENT_PPT_PART='ASP-134606-01';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-1.0UF,6.3V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD Ceramic Capacitor Class2';
      SMD='YES';
      VALUE='1.0uF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_1UF_6V3_10%_X5R';
      MANUFACTURER='GENERIC';
      STATUS='Preferred';
      CASE='0603';
      TOL='10%';
      VOLT='6.3V';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-1.0UF,6.3V';
  end_body;
end_primitive;
primitive 'CAPCERSMDCL2_0603-100NF,16V';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='CAPCERSMDCL2';
      BODY_NAME='CAPCERSMDCL2';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      ALLOW_CONNECT='TRUE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='C';
      CLASS='DISCRETE';
      DESCRIPTION='SMD Ceramic Capacitor Class2';
      SMD='YES';
      VALUE='100nF';
      JEDEC_TYPE='C0603';
      PART_NUMBER='CC0603_100NF_16V_10%';
      MANUFACTURER='GENERIC';
      CASE='0603';
      VOLT='16V';
      TOL='10%';
      STATUS='Preferred';
      PARENT_PART_TYPE='CAPCERSMDCL2_0603';
      PARENT_PPT='CAPCERSMDCL2';
      PARENT_PPT_PART='CAPCERSMDCL2_0603-100NF,16V';
  end_body;
end_primitive;
primitive 'CON26P-BARC2X13';
  pin
    'A'<9>:
      PIN_NUMBER='(10)';
      PINUSE='UNSPEC';
    'A'<8>:
      PIN_NUMBER='(9)';
      PINUSE='UNSPEC';
    'A'<7>:
      PIN_NUMBER='(8)';
      PINUSE='UNSPEC';
    'A'<6>:
      PIN_NUMBER='(7)';
      PINUSE='UNSPEC';
    'A'<5>:
      PIN_NUMBER='(6)';
      PINUSE='UNSPEC';
    'A'<4>:
      PIN_NUMBER='(5)';
      PINUSE='UNSPEC';
    'A'<3>:
      PIN_NUMBER='(4)';
      PINUSE='UNSPEC';
    'A'<2>:
      PIN_NUMBER='(3)';
      PINUSE='UNSPEC';
    'A'<25>:
      PIN_NUMBER='(26)';
      PINUSE='UNSPEC';
    'A'<24>:
      PIN_NUMBER='(25)';
      PINUSE='UNSPEC';
    'A'<23>:
      PIN_NUMBER='(24)';
      PINUSE='UNSPEC';
    'A'<22>:
      PIN_NUMBER='(23)';
      PINUSE='UNSPEC';
    'A'<21>:
      PIN_NUMBER='(22)';
      PINUSE='UNSPEC';
    'A'<20>:
      PIN_NUMBER='(21)';
      PINUSE='UNSPEC';
    'A'<1>:
      PIN_NUMBER='(2)';
      PINUSE='UNSPEC';
    'A'<19>:
      PIN_NUMBER='(20)';
      PINUSE='UNSPEC';
    'A'<18>:
      PIN_NUMBER='(19)';
      PINUSE='UNSPEC';
    'A'<17>:
      PIN_NUMBER='(18)';
      PINUSE='UNSPEC';
    'A'<16>:
      PIN_NUMBER='(17)';
      PINUSE='UNSPEC';
    'A'<15>:
      PIN_NUMBER='(16)';
      PINUSE='UNSPEC';
    'A'<14>:
      PIN_NUMBER='(15)';
      PINUSE='UNSPEC';
    'A'<13>:
      PIN_NUMBER='(14)';
      PINUSE='UNSPEC';
    'A'<12>:
      PIN_NUMBER='(13)';
      PINUSE='UNSPEC';
    'A'<11>:
      PIN_NUMBER='(12)';
      PINUSE='UNSPEC';
    'A'<10>:
      PIN_NUMBER='(11)';
      PINUSE='UNSPEC';
    'A'<0>:
      PIN_NUMBER='(1)';
      PINUSE='UNSPEC';
  end_pin;
  body
      PART_NAME='CON26P';
      VER='3';
      ALLOW_CONNECT='TRUE';
      FAMILY='CONNECTOR';
      UNKNOWN_LOADING='TRUE';
      NO_LOAD_CHECK='TRUE';
      NO_IO_CHECK='TRUE';
      SIZE='1';
      PHYS_DES_PREFIX='J';
      CLASS='IO';
      JEDEC_TYPE='CONHE13C2X13M';
      PINCOUNT='26';
      PART_NUMBER='39104011 26400';
      MANUFACTURER='COMATEL';
      DESCRIPTION='26 Pins Right-Angle Solder Tail Header without Locking Clips';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=09.55.~
05.226.7';
      PARENT_PART_TYPE='CON26P';
      PARENT_PPT='CON26P';
      PARENT_PPT_PART='CON26P-BARC2X13';
  end_body;
end_primitive;
primitive 'CON40P-BARC2X20';
  pin
    'A'<9>:
      PIN_NUMBER='(10)';
      PINUSE='UNSPEC';
    'A'<8>:
      PIN_NUMBER='(9)';
      PINUSE='UNSPEC';
    'A'<7>:
      PIN_NUMBER='(8)';
      PINUSE='UNSPEC';
    'A'<6>:
      PIN_NUMBER='(7)';
      PINUSE='UNSPEC';
    'A'<5>:
      PIN_NUMBER='(6)';
      PINUSE='UNSPEC';
    'A'<4>:
      PIN_NUMBER='(5)';
      PINUSE='UNSPEC';
    'A'<3>:
      PIN_NUMBER='(4)';
      PINUSE='UNSPEC';
    'A'<39>:
      PIN_NUMBER='(40)';
      PINUSE='UNSPEC';
    'A'<38>:
      PIN_NUMBER='(39)';
      PINUSE='UNSPEC';
    'A'<37>:
      PIN_NUMBER='(38)';
      PINUSE='UNSPEC';
    'A'<36>:
      PIN_NUMBER='(37)';
      PINUSE='UNSPEC';
    'A'<35>:
      PIN_NUMBER='(36)';
      PINUSE='UNSPEC';
    'A'<34>:
      PIN_NUMBER='(35)';
      PINUSE='UNSPEC';
    'A'<33>:
      PIN_NUMBER='(34)';
      PINUSE='UNSPEC';
    'A'<32>:
      PIN_NUMBER='(33)';
      PINUSE='UNSPEC';
    'A'<31>:
      PIN_NUMBER='(32)';
      PINUSE='UNSPEC';
    'A'<30>:
      PIN_NUMBER='(31)';
      PINUSE='UNSPEC';
    'A'<2>:
      PIN_NUMBER='(3)';
      PINUSE='UNSPEC';
    'A'<29>:
      PIN_NUMBER='(30)';
      PINUSE='UNSPEC';
    'A'<28>:
      PIN_NUMBER='(29)';
      PINUSE='UNSPEC';
    'A'<27>:
      PIN_NUMBER='(28)';
      PINUSE='UNSPEC';
    'A'<26>:
      PIN_NUMBER='(27)';
      PINUSE='UNSPEC';
    'A'<25>:
      PIN_NUMBER='(26)';
      PINUSE='UNSPEC';
    'A'<24>:
      PIN_NUMBER='(25)';
      PINUSE='UNSPEC';
    'A'<23>:
      PIN_NUMBER='(24)';
      PINUSE='UNSPEC';
    'A'<22>:
      PIN_NUMBER='(23)';
      PINUSE='UNSPEC';
    'A'<21>:
      PIN_NUMBER='(22)';
      PINUSE='UNSPEC';
    'A'<20>:
      PIN_NUMBER='(21)';
      PINUSE='UNSPEC';
    'A'<1>:
      PIN_NUMBER='(2)';
      PINUSE='UNSPEC';
    'A'<19>:
      PIN_NUMBER='(20)';
      PINUSE='UNSPEC';
    'A'<18>:
      PIN_NUMBER='(19)';
      PINUSE='UNSPEC';
    'A'<17>:
      PIN_NUMBER='(18)';
      PINUSE='UNSPEC';
    'A'<16>:
      PIN_NUMBER='(17)';
      PINUSE='UNSPEC';
    'A'<15>:
      PIN_NUMBER='(16)';
      PINUSE='UNSPEC';
    'A'<14>:
      PIN_NUMBER='(15)';
      PINUSE='UNSPEC';
    'A'<13>:
      PIN_NUMBER='(14)';
      PINUSE='UNSPEC';
    'A'<12>:
      PIN_NUMBER='(13)';
      PINUSE='UNSPEC';
    'A'<11>:
      PIN_NUMBER='(12)';
      PINUSE='UNSPEC';
    'A'<10>:
      PIN_NUMBER='(11)';
      PINUSE='UNSPEC';
    'A'<0>:
      PIN_NUMBER='(1)';
      PINUSE='UNSPEC';
  end_pin;
  body
      PART_NAME='CON40P';
      VER='3';
      NO_IO_CHECK='TRUE';
      NO_LOAD_CHECK='TRUE';
      UNKNOWN_LOADING='TRUE';
      ALLOW_CONNECT='TRUE';
      FAMILY='CONNECTOR';
      SIZE='1';
      PHYS_DES_PREFIX='J';
      CLASS='IO';
      JEDEC_TYPE='CONHE13C2X20M';
      PINCOUNT='40';
      PART_NUMBER='39104011 40400';
      MANUFACTURER='COMATEL';
      DESCRIPTION='40 Pins Right Angle Solder Tail Header without Locking Clips';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=09.55.~
05.240.9';
      PARENT_PART_TYPE='CON40P';
      PARENT_PPT='CON40P';
      PARENT_PPT_PART='CON40P-BARC2X20';
  end_body;
end_primitive;
primitive 'RSMD0603_-00,';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='0603 Size SMD Jumper';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_00_JUMPER';
      VALUE='00';
      TOL='';
      PWR='';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.000.5';
      PARENT_PART_TYPE='RSMD0603_';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_-00,';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-100,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_100R_1%_0.1W_100PPM';
      VALUE='100';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.200.9';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-100,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-1K,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_1K_1%_0.1W_100PPM';
      VALUE='1k';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.300.6';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-1K,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-24,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_24R_1%_0.1W_100PPM';
      VALUE='24';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.124.4';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-24,1%';
  end_body;
end_primitive;
primitive 'RSMD0603_1/10W-390,1%';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
    'B'<0>:
      PIN_NUMBER='(2)';
      PIN_GROUP='1';
      INPUT_LOAD='(*,*)';
      OUTPUT_LOAD='(*,*)';
      BIDIRECTIONAL='TRUE';
      PINUSE='BI';
  end_pin;
  body
      PART_NAME='RSMD0603';
      BODY_NAME='RSMD0603';
      CLASS='DISCRETE';
      PINCOUNT='2';
      SIZE='1';
      PHYS_DES_PREFIX='R';
      DESCRIPTION='SMD Resistor';
      CASE='0603';
      SMD='YES';
      STATUS='Preferred';
      PART_NUMBER='R0603_390R_1%_0.1W_100PPM';
      VALUE='390';
      TOL='1%';
      PWR='0.1W';
      JEDEC_TYPE='C0603';
      MANUFACTURER='GENERIC';
      SCEM='http://edhcat.cern.ch/edhcat/Browser?command=searchItems&scem=11.24.~
03.239.4';
      PARENT_PART_TYPE='RSMD0603_1/10W';
      PARENT_PPT='RSMD0603';
      PARENT_PPT_PART='RSMD0603_1/10W-390,1%';
  end_body;
end_primitive;
primitive 'SK-SAMTEC-40PIN-MB1_RT-SMT-SAMA';
  pin
    'A'<0>:
      PIN_NUMBER='(1)';
      PINUSE='UNSPEC';
    'A'<10>:
      PIN_NUMBER='(11)';
      PINUSE='UNSPEC';
    'A'<11>:
      PIN_NUMBER='(12)';
      PINUSE='UNSPEC';
    'A'<12>:
      PIN_NUMBER='(13)';
      PINUSE='UNSPEC';
    'A'<13>:
      PIN_NUMBER='(14)';
      PINUSE='UNSPEC';
    'A'<14>:
      PIN_NUMBER='(15)';
      PINUSE='UNSPEC';
    'A'<15>:
      PIN_NUMBER='(16)';
      PINUSE='UNSPEC';
    'A'<16>:
      PIN_NUMBER='(17)';
      PINUSE='UNSPEC';
    'A'<17>:
      PIN_NUMBER='(18)';
      PINUSE='UNSPEC';
    'A'<18>:
      PIN_NUMBER='(19)';
      PINUSE='UNSPEC';
    'A'<19>:
      PIN_NUMBER='(20)';
      PINUSE='UNSPEC';
    'A'<1>:
      PIN_NUMBER='(2)';
      PINUSE='UNSPEC';
    'A'<20>:
      PIN_NUMBER='(21)';
      PINUSE='UNSPEC';
    'A'<21>:
      PIN_NUMBER='(22)';
      PINUSE='UNSPEC';
    'A'<22>:
      PIN_NUMBER='(23)';
      PINUSE='UNSPEC';
    'A'<23>:
      PIN_NUMBER='(24)';
      PINUSE='UNSPEC';
    'A'<24>:
      PIN_NUMBER='(25)';
      PINUSE='UNSPEC';
    'A'<25>:
      PIN_NUMBER='(26)';
      PINUSE='UNSPEC';
    'A'<26>:
      PIN_NUMBER='(27)';
      PINUSE='UNSPEC';
    'A'<27>:
      PIN_NUMBER='(28)';
      PINUSE='UNSPEC';
    'A'<28>:
      PIN_NUMBER='(29)';
      PINUSE='UNSPEC';
    'A'<29>:
      PIN_NUMBER='(30)';
      PINUSE='UNSPEC';
    'A'<2>:
      PIN_NUMBER='(3)';
      PINUSE='UNSPEC';
    'A'<30>:
      PIN_NUMBER='(31)';
      PINUSE='UNSPEC';
    'A'<31>:
      PIN_NUMBER='(32)';
      PINUSE='UNSPEC';
    'A'<32>:
      PIN_NUMBER='(33)';
      PINUSE='UNSPEC';
    'A'<33>:
      PIN_NUMBER='(34)';
      PINUSE='UNSPEC';
    'A'<34>:
      PIN_NUMBER='(35)';
      PINUSE='UNSPEC';
    'A'<35>:
      PIN_NUMBER='(36)';
      PINUSE='UNSPEC';
    'A'<36>:
      PIN_NUMBER='(37)';
      PINUSE='UNSPEC';
    'A'<37>:
      PIN_NUMBER='(38)';
      PINUSE='UNSPEC';
    'A'<38>:
      PIN_NUMBER='(39)';
      PINUSE='UNSPEC';
    'A'<39>:
      PIN_NUMBER='(40)';
      PINUSE='UNSPEC';
    'A'<3>:
      PIN_NUMBER='(4)';
      PINUSE='UNSPEC';
    'A'<4>:
      PIN_NUMBER='(5)';
      PINUSE='UNSPEC';
    'A'<5>:
      PIN_NUMBER='(6)';
      PINUSE='UNSPEC';
    'A'<6>:
      PIN_NUMBER='(7)';
      PINUSE='UNSPEC';
    'A'<7>:
      PIN_NUMBER='(8)';
      PINUSE='UNSPEC';
    'A'<8>:
      PIN_NUMBER='(9)';
      PINUSE='UNSPEC';
    'A'<9>:
      PIN_NUMBER='(10)';
      PINUSE='UNSPEC';
  end_pin;
  body
      PART_NAME='SK-SAMTEC-40PIN-MB1';
      VER='3';
      NO_IO_CHECK='TRUE';
      NO_LOAD_CHECK='TRUE';
      UNKNOWN_LOADING='TRUE';
      ALLOW_CONNECT='TRUE';
      FAMILY='CONNECTOR';
      SIZE='1';
      BODY_NAME='SK-SAMTEC-40PIN-MB1';
      JEDEC_TYPE='SK_SAMTEC_MB1_140_01';
      PHYS_DES_PREFIX='U';
      CLASS='IO';
      CI='';
      PART_NUMBER='Samtec MB1-140-01-L-S-02-SL';
      PART_DESCRIPTION='40-pin SMT Mini Card Guide. 1mm pitch pins. MB1 series';
      OL_COMMENTS='Available Farnell 1753947';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      PARENT_PART_TYPE='SK-SAMTEC-40PIN-MB1_RT-SMT';
      PARENT_PPT='SK-SAMTEC-40PIN-MB1';
      PARENT_PPT_PART='SK-SAMTEC-40PIN-MB1_RT-SMT-SAMTEC';
  end_body;
end_primitive;
primitive 'SN74AUC2G07_SOT-TI-GND=GND_SIGA';
  pin
    'A':
      PIN_NUMBER='(1,3)';
      INPUT_LOAD='(*,*)';
      PINUSE='IN';
    'Y':
      PIN_NUMBER='(6,4)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='OUT';
  end_pin;
  body
      PART_NAME='SN74AUC2G07';
      BODY_NAME='SN74AUC2G07';
      JEDEC_TYPE='SOT23_6';
      PHYS_DES_PREFIX='U';
      CLASS='IC';
      GROUND_NETS='GND';
      CI='';
      PART_NUMBER='TI SN74AUC2G07DBVT ';
      PART_DESCRIPTION='Dual non-inverting buffer, open drain outputs 0.8-3.6V s~
upply';
      OL_COMMENTS='Farnell 1754360, or digikey';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      POWER_PINS='(GND_SIGNAL:2;P3V3:5)';
      PARENT_PART_TYPE='SN74AUC2G07_SOT';
      SCH_MODIFIED_PART='TRUE';
      PARENT_PPT='SN74AUC2G07';
      PARENT_PPT_PART='SN74AUC2G07_SOT-TI';
  end_body;
end_primitive;
primitive 'SN74AUC2G07_SOT-TI-GND=GND_SIGB';
  pin
    'A':
      PIN_NUMBER='(1,3)';
      INPUT_LOAD='(*,*)';
      PINUSE='IN';
    'Y':
      PIN_NUMBER='(6,4)';
      OUTPUT_LOAD='(1.0,-1.0)';
      PINUSE='OUT';
  end_pin;
  body
      PART_NAME='SN74AUC2G07';
      BODY_NAME='SN74AUC2G07';
      JEDEC_TYPE='SOT23_6';
      PHYS_DES_PREFIX='U';
      CLASS='IC';
      GROUND_NETS='GND';
      CI='';
      PART_NUMBER='TI SN74AUC2G07DBVT ';
      PART_DESCRIPTION='Dual non-inverting buffer, open drain outputs 0.8-3.6V s~
upply';
      OL_COMMENTS='Farnell 1754360, or digikey';
      KL_COMMENTS='-';
      PL_COMMENTS='-';
      POWER_PINS='(GND_SIGNAL:2;P2V5:5)';
      PARENT_PART_TYPE='SN74AUC2G07_SOT';
      SCH_MODIFIED_PART='TRUE';
      PARENT_PPT='SN74AUC2G07';
      PARENT_PPT_PART='SN74AUC2G07_SOT-TI';
  end_body;
end_primitive;
END.
